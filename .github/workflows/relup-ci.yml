name: Relup CI

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  versions:
    runs-on: ubuntu-latest

    container:
      image: erlang:25.0.2

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Run validation checks and build releases
      working-directory: erlang
      # Check that all version numbers have been adequately bumped
      # for all modified apps and for all changes in erlang runtime
      # systems.
      #
      # Then make sure the relup itself can be built fine. This is
      # all in an escript to make our life easier.
      #
      # This check gets bypassed if a RESTART version bump is passed.
      run: |
        ../scripts/check_versions $(/usr/bin/git log -1 --format='%H') > vsn.log
        cat vsn.log
        cat vsn.log | awk '/Generated appup/ { appup=1 }
                           /relup successfully created!/ { relup=1 }
                           END { if (!appup) { print "appup missing"; exit 1}
                                 if (!relup) { print "relup missing"; exit 1} }'
        OLD=$(cat vsn.log | awk '/OLD:/ {print $2}')
        NEW=$(cat vsn.log | awk '/NEW:/ {print $2}')
        echo "OLD_TAR=$OLD" >> $GITHUB_ENV
        echo "NEW_TAR=$NEW" >> $GITHUB_ENV
    # This here step is a working sample, but if you were to run a more
    # complex app with external dependencies, you'd also have to do a
    # more intricate multi-service setup here, e.g.:
    # https://github.com/actions/example-services
    - name: Run relup application
      working-directory: erlang
      run: |
        mkdir relupci
        tar -xvf "${{ env.OLD_TAR }}" -C relupci
        # use a simple "run the task in the background" setup
        relupci/bin/dandelion daemon
        TAG=$(echo "${{ env.NEW_TAR }}"  | sed -nr 's/^.*([0-9]+\.[0-9]+\.[0-9]+)\.tar\.gz$/\1/p')
        cp "${{ env.NEW_TAR }}" relupci/releases/
        relupci/bin/dandelion unpack ${TAG}
        relupci/bin/dandelion install ${TAG}
        relupci/bin/dandelion upgrade ${TAG}
        relupci/bin/dandelion versions

