{alias, [
    {check, [
        xref, dialyzer, ct, {cover, "-v"}
    ]}
]}.

{cover_enabled, true}.
{cover_opts, [verbose, {min_coverage, 20}]}.

{xref_checks, [
    undefined_function_calls, undefined_functions, locals_not_used,
    deprecated_function_calls, deprecated_functions
]}.

{erl_opts, [debug_info]}.
{deps, []}.

{relx, [{release, {dandelion, "0.1.0"},
         [dandelion,
          sasl]},

        {mode, dev},

        %% automatically picked up if the files
        %% exist but can be set manually, which
        %% is required if the names aren't exactly
        %% sys.config and vm.args
        {sys_config_src, "./config/sys.config.src"},
        {vm_args, "./config/vm.args"}

        %% the .src form of the configuration files do
        %% not require setting RELX_REPLACE_OS_VARS
        %% {sys_config_src, "./config/sys.config.src"},
        %% {vm_args_src, "./config/vm.args.src"}
]}.

{profiles, [
    {prod, [
        {relx, [
            %% We could use {mode, prod} here, but since I'm developing this
            %% with a mix of github CI on x86 and of a microk8s cluster
            %% running on a m1 macbook, the final image is run on a linux on
            %% aarch64. As such, minimal mode omits the ERTS, and using an
            %% Erlang base image lets us do portable builds so long as we don't
            %% start relying on NIFs.
            %%
            %% This conveniently allows/demands that pods get restarted when
            %% we upgrade the VM as well.
            {mode, minimal}
        ]}
    ]},
    {test, [
        {erl_opts, [nowarn_export_all]}
    ]}
]}.
